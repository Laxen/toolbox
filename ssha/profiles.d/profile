set -o vi

alias l="ls -alh"
alias c="cd .."
alias sysrel="systemctl daemon-reload"
alias sysres="systemctl restart"
alias sysstop="systemctl stop"
alias sysstart="systemctl start"
alias sysmask="systemctl mask"
alias sysstat="systemctl status"
alias servicegrep="ls -alh /lib/systemd/system | grep"
alias sua="su -s /bin/sh "
autodd () { echo "Creating \"bigfile\" with size $1 MB..."; dd if=/dev/zero of=bigfile bs=1M count="$1"; }
dynamicdebug () { echo "file $1 +p" > /sys/kernel/debug/dynamic_debug/control; }
alias fixlocale="cp /usr/share/zoneinfo/Europe/Stockholm /etc/localtime && echo \"Locale set to Stockholm!\""
alias printall="echo 8 > /proc/sys/kernel/printk"
alias crash="echo c > /proc/sysrq-trigger"
alias iosched="cat /sys/block/sda/queue/scheduler"
alias udev="cd /usr/lib/udev/rules.d"
alias dtoverlays="cd /sys/devices/virtual/overlay"
get () { wget http://192.168.0.1:8000/$1; }
alias trace="cat /sys/kernel/debug/tracing/trace"
alias sysdebug="cd /sys/kernel/debug"

cpugov () {
    LOC="/sys/devices/system/cpu/cpufreq"
    gov_0=$( cat "$LOC/policy0/scaling_governor" )
    cpus_0=$( cat "$LOC/policy0/affected_cpus" )

    echo "$cpus_0: $gov_0"

    govs=$( cat $LOC/policy0/scaling_available_governors )
    echo "available govs: $govs"
}

setcpugov () {
    LOC="/sys/devices/system/cpu/cpufreq"
    echo "$1" > "$LOC/policy0/scaling_governor"
    cpugov
}

setiosched () {
    echo "$1" > "/sys/block/sda/queue/scheduler"
    iosched
}

cpufreq () {
    LOC="/sys/devices/system/cpu/cpufreq"

    freq=$( cat $LOC/policy0/scaling_cur_freq )
    echo $freq

    freqs=$( cat $LOC/policy0/scaling_available_frequencies )
    echo "available freqs: $freqs"
}

setcpufreq () {
    echo "$1" > /sys/devices/system/cpu/cpufreq/policy0/scaling_min_freq
    echo "$1" > /sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq
}
